/*
    - base/ contient les fichiers qui définissent les fondations de votre site, par exemple la police de caractères 
            et les normes que vous voulez appliquer sur tout votre site, telles que le box-sizing ;
    - utils/, vous rangez vos variables, fonctions, mixins et les  %placeholders pour les extensions (si vous en utilisez) ;
    - layouts/ est le dossier où vous mettez vos blocs BEM qui contiennent ce qui est réutilisable, 
            par exemple un header pour les mises en page de grande taille ou un footer ;
    - components/ est utilisé pour ranger les blocs BEM qui sont plus indépendants, comme les boutons.

Alors que les layouts peuvent utiliser d’autres composants pour générer leurs contenus, les composants, eux, sont plus élémentaires. 
Par exemple, un formulaire doit être considéré comme un layout : la mise en page est une fonction vitale du bloc 
et il utilise d’autres blocs pour fonctionner,  comme des boutons. En revanche, le bouton lui-même est un composant car il n’a besoin 
d’aucun autre composant pour remplir sa fonction ;
    
    pages/ contient les blocs de code qui ne s’appliquent qu’à une seule page. 
            Vous utilisez des boutons dans tout votre site, en revanche votre page d’accueil comporte une section Citation 
            et une grille de projets qui ne sont employés nulle part ailleurs. En d’autres termes, pages/ contient des règles spécifiques 
            à une seule page qui ne seront pas réutilisées ailleurs ;
    themes/, c’est ici que vous stockez le code thématique, par exemple un style customisé pour Noël ou pour l’été. 
    vendors/ est un directory pour des feuilles de style externes comme Bootstrap ou jQuery UI. En gros, il s’utilise pour tout CSS venant de l’extérieur. 

D’une manière générale, pour éviter les erreurs, faites en sorte d’importer vos fichiers dans l’ordre suivant :
    Utils :
        Variables.
        Fonctions.
        Mixins.
        Placeholders.
    Feuilles de style de tiers (vendors) (si vous en avez).
    Base.
    Composants.
    Layout.
    Pages.
    Thèmes.

Exemple : 
@import "./utils/variables";
@import "./utils/functions";
@import "./utils/mixins";
@import "./utils/extensions";
@import "./base/base";
@import "./base/typography";
@import "./components/buttons";
@import "./layouts/header";
@import "./layouts/nav";
@import "./layouts/container";
@import "./layouts/form";
@import "./pages/work";
@import "./pages/about";
@import "./pages/project";

*/
@import "./utils/variables";
@import "./utils/functions";
@import "./utils/mixins";
@import "./utils/extensions";
@import "./base/base";
@import "./base/typography";
@import "./components/navigation-buttons";
@import "./layout/header";
@import "./layout/form";
@import "./layout/footer";
@import "./pages/presentation";
@import "./pages/projets";
@import "./pages/competences";
@import "./pages/experiences";